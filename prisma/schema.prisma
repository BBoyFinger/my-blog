// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Category {
  id    String @id @default(auto()) @map("_id") @db.ObjectId()
  name  String @unique
  description String
  posts Post[]
}

model Post {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId()
  slug        String    @unique
  title       String
  description String
  author      User      @relation(fields: [authorId], references: [id])
  authorId    String    @db.ObjectId
  image       String?
  createdAt   DateTime  @default(now())
  comments    Comment[]
  Category    Category? @relation(fields: [categoryId], references: [id])
  categoryId  String?   @db.ObjectId()
}

model User {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId()
  email    String  @unique
  name     String?
  address  String?
  password String
  posts    Post[]
  tokens   Token[]
}

model Token {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  token     String   @unique
  createAt  DateTime @default(now())
  expiresAt DateTime
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.ObjectId
}

model Comment {
  id      String @id @default(auto()) @map("_id") @db.ObjectId()
  comment String
  post    Post   @relation(fields: [postId], references: [id])
  postId  String @db.ObjectId
}
